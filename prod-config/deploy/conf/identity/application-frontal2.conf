application.secret="X]<Vu<Vbdn3sPcRjY?4OOBg5D1SuD7?aTwjwKWTRnx^6ulgK2oR/N]c;F/IZ[R3Z"
application.langs="en"
logger.root=ERROR
logger.play=INFO
logger.application=DEBUG
logger.AMAZING-IDENTITY=DEBUG
logger.CLIENTS_WATCHER=DEBUG
logger.UDPServer=DEBUG
logger.SeedHelper=DEBUG
logger.BootstrapSeed=DEBUG
logger.EventsourceProcessor=INFO
logger.EventSourceProcessorProxy=INFO
logger.CassandraJournal=INFO
logger.Views=INFO


#IDENTITY
cassandra.default.nodes: ["192.168.1.54"]

amazing-config {
  links {
    cart = "http://cart.amazing.com"
    frontend = "http://www.amazing.com"
    backend = "http://backend.amazing.com"
    identity = "http://identity.amazing.com"
  }
  akka {
    log-dead-letters-during-shutdown = off
    log-dead-letters = off
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
  	  netty.tcp {
  		  hostname = "192.168.1.52"
  	    port = 2553
  	  }	 
      transport-failure-detector {
        heartbeat-interval = 30 s
        acceptable-heartbeat-pause = 5 s
      } 	  
    }
    cluster {
      failure-detector {
        acceptable-heartbeat-pause = 20 s
        threshold = 12.0
      }
      auto-down-unreachable-after = off
      metrics.enabled = off
      roles=["IDENTITY"]
	  seed-nodes = [
	  	"akka.tcp://amazing-system@192.168.1.51:2550"
	  ]	  
    }
  }
  cassandra-journal{
    keyspace="akkauserjournal"
    cassandra.default.nodes: ["192.168.1.54"]
  }
  journalclass="com.amazing.store.persistence.journal.CassandraJournal"
}